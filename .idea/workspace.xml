<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="eda5ac3e-9008-4050-b99a-591e69df34c6" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/backend/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/certificate/cert.pem" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/certificate/key.pem" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/src/main.ts" beforeDir="false" afterPath="$PROJECT_DIR$/backend/src/main.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/frontend/axiosInstance.js" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/axiosInstance.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/frontend/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/package-lock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/frontend/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/frontend/src/app/auth/page.jsx" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/src/app/auth/register/page.jsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/frontend/src/app/globals.css" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/src/app/globals.css" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/frontend/src/app/layout.js" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/src/app/layout.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/frontend/src/app/page.js" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/src/app/page.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/frontend/src/components/Form.jsx" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/src/components/RegisterForm.jsx" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="TypeScript File" />
        <option value="Dockerfile" />
        <option value="JavaScript File" />
        <option value="JSX File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 6
}</component>
  <component name="ProjectId" id="2hkSVKoKer0qvQd7enJlbYUoSkt" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="1" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Docker.docker-compose.yml.postgres: Compose Deployment.executor": "Run",
    "Jest.AuthController.executor": "Run",
    "Jest.AuthController.signUp.should return auth status on successful signup.executor": "Debug",
    "Jest.AuthService.executor": "Run",
    "Jest.AuthService.signIn.executor": "Run",
    "Jest.AuthService.signIn.should return success if username and password are correct.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "git-widget-placeholder": "the__main__of__the__main",
    "js.last.introduce.type": "CONST",
    "last_opened_file_path": "/Users/divaan/Desktop/code/practice_college",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.standard": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.standard": "",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs.jest.jest_package": "/Users/divaan/Desktop/code/practice_college/backend/node_modules/jest",
    "nodejs_package_manager_path": "npm",
    "npm.dev.executor": "Run",
    "npm.start:prod.executor": "Run",
    "prettierjs.PrettierConfiguration.Package": "/Users/divaan/Desktop/code/practice_college/backend/node_modules/prettier",
    "settings.editor.selected.configurable": "preferences.sourceCode.TypeScript",
    "ts.external.directory.path": "/Users/divaan/Desktop/code/practice_college/backend/node_modules/typescript/lib",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/certificate" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/frontend/src/app/auth/register" />
      <recent name="$PROJECT_DIR$/backend" />
      <recent name="$PROJECT_DIR$/frontend/src/app" />
      <recent name="$PROJECT_DIR$/frontend/src" />
      <recent name="$PROJECT_DIR$/frontend/src/pages" />
    </key>
  </component>
  <component name="RunManager" selected="Docker.docker-compose.yml.postgres: Compose Deployment">
    <configuration name="AuthService" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/backend/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/backend" />
      <envs />
      <scope-kind value="SUITE" />
      <test-file value="$PROJECT_DIR$/backend/src/auth/auth.service.spec.ts" />
      <test-names>
        <test-name value="AuthService" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="AuthService.signIn" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/backend/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/backend" />
      <envs />
      <scope-kind value="SUITE" />
      <test-file value="$PROJECT_DIR$/backend/src/auth/auth.service.spec.ts" />
      <test-names>
        <test-name value="AuthService" />
        <test-name value="signIn" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
      <deployment type="dockerfile">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.postgres: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="envFilePath" value="" />
          <option name="services">
            <list>
              <option value="postgres" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="dev" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/frontend/package.json" />
      <command value="run" />
      <scripts>
        <script value="dev" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="start:prod" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/backend/package.json" />
      <command value="run" />
      <scripts>
        <script value="start:prod" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.docker-compose.yml.postgres: Compose Deployment" />
        <item itemvalue="npm.dev" />
        <item itemvalue="npm.start:prod" />
        <item itemvalue="Jest.AuthService" />
        <item itemvalue="Jest.AuthService.signIn" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-1d06a55b98c1-0b3e54e931b4-JavaScript-WS-241.17890.13" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="eda5ac3e-9008-4050-b99a-591e69df34c6" name="Changes" comment="" />
      <created>1718136605418</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1718136605418</updated>
      <workItem from="1718136606407" duration="158000" />
      <workItem from="1718137577393" duration="48000" />
      <workItem from="1718143281772" duration="3885000" />
      <workItem from="1718269862076" duration="23721000" />
      <workItem from="1718356677103" duration="27257000" />
      <workItem from="1718458637970" duration="27095000" />
      <workItem from="1718618929564" duration="12427000" />
      <workItem from="1718700659223" duration="7635000" />
      <workItem from="1718708391370" duration="121000" />
      <workItem from="1718708520262" duration="36899000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>